{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-request.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(webService, router, http) {\n      this.webService = webService;\n      this.router = router;\n      this.http = http;\n    }\n    login(email, password) {\n      return this.webService.login(email, password).pipe(shareReplay(), tap(res => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"LOGGED IN!\");\n      }));\n    }\n    signup(email, password) {\n      return this.webService.signup(email, password).pipe(shareReplay(), tap(res => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"Successfully signed up and now logged in!\");\n      }));\n    }\n    logout() {\n      this.removeSession();\n      this.router.navigate(['/login']);\n    }\n    getAccessToken() {\n      return localStorage.getItem('x-access-token');\n    }\n    getRefreshToken() {\n      return localStorage.getItem('x-refresh-token');\n    }\n    getUserId() {\n      return localStorage.getItem('user-id');\n    }\n    setAccessToken(accessToken) {\n      localStorage.setItem('x-access-token', accessToken);\n    }\n    setSession(userId, accessToken, refreshToken) {\n      localStorage.setItem('user-id', userId);\n      localStorage.setItem('x-access-token', accessToken);\n      localStorage.setItem('x-refresh-token', refreshToken);\n    }\n    removeSession() {\n      localStorage.removeItem('user-id');\n      localStorage.removeItem('x-access-token');\n      localStorage.removeItem('x-refresh-token');\n    }\n    getNewAccessToken() {\n      return this.http.get(`${this.webService.ROOT_URL}/users/me/access-token`, {\n        headers: {\n          'x-refresh-token': this.getRefreshToken(),\n          '_id': this.getUserId()\n        },\n        observe: 'response'\n      }).pipe(tap(res => {\n        this.setAccessToken(res.headers.get('x-access-token'));\n      }));\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.WebRequestService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}